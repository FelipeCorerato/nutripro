name: Pull Request Checks

on:
  pull_request:
    branches: [ main, master, develop ]
    types: [opened, synchronize, reopened]

jobs:
  lint-and-build:
    name: Lint and Build
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npm run lint
    
    - name: Build project
      run: npm run build
    
    - name: Check build output
      run: |
        if [ -d ".next" ]; then
          echo "‚úÖ Build successful - .next directory created"
          ls -la .next/
        else
          echo "‚ùå Build failed - .next directory not found"
          exit 1
        fi

  security-check:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level=moderate
      continue-on-error: true
    
    - name: Check for vulnerabilities
      run: |
        if npm audit --audit-level=high --json > /dev/null 2>&1; then
          echo "üîç Checking for high/critical vulnerabilities..."
          if npm audit --audit-level=high --json | grep -q '"high":\s*[1-9]\|"critical":\s*[1-9]'; then
            echo "‚ùå High or critical vulnerabilities found"
            npm audit --audit-level=high
            exit 1
          else
            echo "‚úÖ No high or critical vulnerabilities found"
          fi
        else
          echo "‚úÖ No vulnerabilities found"
        fi

  type-check:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run TypeScript type check
      run: npx tsc --noEmit
